#
# Configuration for GitHub-based CI, based on the stock GitHub Rust config.
#
name: Rust

on: [ push, pull_request ]

jobs:
  check-style:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Get versions
        id: versions
        run: |
          echo CARGO_VERSION=$(cargo --version) >> $GITHUB_OUTPUT
          echo RUSTFMT_VERSION=$(cargo fmt -- --version) >> $GITHUB_OUTPUT
      - name: Check style
        id: rustfmt-check
        run: |
          CHECK=$(cargo fmt -- --check)
          echo "CHECK=$CHECK" >> $GITHUB_OUTPUT
      - name: Report style check
        run: |
          CARGO_VERSION="${{ steps.versions.outputs.CARGO_VERSION }}"
          RUSTFMT_VERSION="${{ steps.versions.outputs.RUSTFMT_VERSION }}"
          RUSTFMT_CHECK="${{ steps.rustfmt-check.outputs.CHECK }}"
          echo "Cargo version $CARGO_VERSION"
          echo "rustfmt version $RUSTFMT_VERSION"
          echo "rustfmt check $RUSTFMT_CHECK"

  clippy-lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Report cargo version
        run: cargo --version
      - name: Report Clippy version
        run: cargo clippy -- --version
      - name: Run Clippy Lints
        run: cargo clippy -- -D warnings

  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Report cargo version
        run: cargo --version
      - name: Report rustc version
        run: rustc --version
      - name: Build
        run: cargo build --all-targets --verbose
      - name: Run tests
        run: cargo test --verbose
